from sqlalchemy import create_engine, Column, Integer, String, ForeignKey
from sqlalchemy.orm import sessionmaker, relationship
from sqlalchemy.ext.declarative import declarative_base

# Step 1: Connect to the Database
# Replace 'sqlite:///your_database.db' with the path to your SQLite database file
engine = create_engine('sqlite:///your_database.db')

# Step 2: Define Database Models
Base = declarative_base()

class File(Base):
    __tablename__ = 'files'

    id = Column(Integer, primary_key=True)
    name = Column(String)
    parent_id = Column(Integer, ForeignKey('files.id'))

    parent = relationship("File", remote_side=[id])

# Step 3: Create Session
Session = sessionmaker(bind=engine)
session = Session()

# Step 4: Query Files in a Tree Structure
def get_files_in_tree(parent_id=None):
    files = session.query(File).filter(File.parent_id == parent_id).all()
    for file in files:
        print(file.name)
        get_files_in_tree(file.id)

# Step 5: Process Retrieved Data
if __name__ == "__main__":
    get_files_in_tree()
